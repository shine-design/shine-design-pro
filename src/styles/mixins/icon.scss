/**
 * @Author 开发团队 - team@shine.design
 * @Date 2018/9/4 下午1:42
 */
@import "../functions";
@import "../config/icon-code";

// Icon 尺寸
@mixin icons-size($config) {
  [class^="sh-icon-"],
  [class*="sh-icon-"] {
    font-size: array-get($config, shine-icon);
  }
}

// Icon 属性
@mixin icons-attr($attr, $config) {
  [class^="sh-icon-"],
  [class*="sh-icon-"] {
    #{$attr}: array-get($config, shine-icon);
  }
}

// Icon 样式
@mixin icons-style {
  [class^="sh-icon-"],
  [class*="sh-icon-"] {
    @content;
  }
}

@mixin icon($default-state) {
  &:before {
    display: inline-block;
    font-family: "ShineIcon";
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    line-height: 0px;
    text-decoration: inherit;
    text-rendering: optimizeLegibility;
    text-transform: none;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-smoothing: antialiased;
    content: "#{$default-state}";
  }
}

@mixin icon-self($default-state) {
  display: inline-block;
  font-family: "ShineIcon";
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  line-height: 0px;
  text-decoration: inherit;
  text-rendering: optimizeLegibility;
  text-transform: none;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
  content: "#{$default-state}";
}

@mixin sh-icon($icon) {
  font-family: "LineAwesome";
  text-decoration: inherit;
  text-rendering: optimizeLegibility;
  text-transform: none;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;

  &:before {
    content: "#{$icon}";
  }
}

//== Lineawesome icon
@mixin sh-icon-self($icon) {
  font-family: "LineAwesome";
  text-decoration: inherit;
  text-rendering: optimizeLegibility;
  text-transform: none;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
  content: "#{$icon}";
}

//== Close icon
@mixin sh-generate-close-icon($self:null) {
  @if $self == true {
    @include sh-icon-self( array-get($sh--icon-codes, close) );
  } @else {
    @include sh-icon( array-get($sh--icon-codes, close) );
  }
}

//== Arrow down icon
@mixin sh-generate-arrow-icon($dir, $self:null) {
  @if $dir == down {
    @if $self == true {
      @include sh-icon-self(array-get($sh--icon-codes, down));
    } @else {
      @include sh-icon(array-get($sh--icon-codes, down));
    }
  }

  @if $dir == up {
    @if $self == true {
      @include sh-icon-self(array-get($sh--icon-codes, up));
    } @else {
      @include sh-icon(array-get($sh--icon-codes, up));
    }
  }

  @if $dir == left {
    @if $self == true {
      @include sh-icon-self(array-get($sh--icon-codes, left));
    } @else {
      @include sh-icon(array-get($sh--icon-codes, left));
    }
  }

  @if $dir == right {
    @if $self == true {
      @include sh-icon-self(array-get($sh--icon-codes, right));
    } @else {
      @include sh-icon(array-get($sh--icon-codes, right));
    }
  }
}
